#UNMENU_RELEASE $Revision$ $Date$
PACKAGE_NAME AirVideo
PACKAGE_DESCR <u>Video Streaming</u><br/>Air Video can stream videos in almost any format to your iPhone and iPod touch.
PACKAGE_DESCR You don't need to copy your videos to the device just to watch them.<br/><u>Live Conversion</u><br/>If the
PACKAGE_DESCR videos in your collection are not in format supported by iPhone, Air Video will convert them on fly*. You
PACKAGE_DESCR don't need to wait until the entire video is converted. You can start watching it almost immediately!
PACKAGE_DESCR <i>* Live Conversion requires iPhone or iPod touch with firmware 3.0 and a sufficiently powerful computer
PACKAGE_DESCR (Intel Core 2 duo or equivalent processor is recommended).</i>

# the airvideo server .jar file
PACKAGE_URL http://www.inmethod.com/air-video/download/linux/alpha6/AirVideoServerLinux.jar
PACKAGE_FILE AirVideoServerLinux.jar
PACKAGE_MD5 b619c088eea230afa92181393a36e1c0

# the faac file
PACKAGE_EXTRA_URL http://slackpack.ludost.net/packages/12.1/faac-1.26-i486-1gds.tgz
PACKAGE_EXTRA_FILE faac-1.26-i486-1gds.tgz
PACKAGE_EXTRA_MD5 b2076c450fffca386a213144b6fcdb0c

# the faad2 file
PACKAGE_EXTRA_URL http://slackpack.ludost.net/packages/12.1/faad2-2.6.1-i486-2gds.tgz
PACKAGE_EXTRA_FILE faad2-2.6.1-i486-2gds.tgz
PACKAGE_EXTRA_MD5 303562055b4c8d67cb24cf751acdf04b

# the git file
PACKAGE_EXTRA_URL http://slackware.cs.utah.edu/pub/slackware/slackware-13.1/slackware/d/git-1.7.1-i486-1.txz
PACKAGE_EXTRA_FILE git-1.7.1-i486-1.txz
PACKAGE_EXTRA_MD5 57448ca3b5665c83572ebd78c766e152

# the lame file
PACKAGE_EXTRA_URL http://slackpack.ludost.net/packages/12.1/lame-3.98.2-i486-1gds.tgz
PACKAGE_EXTRA_FILE lame-3.98.2-i486-1gds.tgz
PACKAGE_EXTRA_MD5 55deced6c5ecd9836b3bebf49f8579e4

# the mpeg file
PACKAGE_EXTRA_URL http://lp.slackwaresupport.com/Slackware-11.0/X11/mpeg4ip/mpeg4ip-1.5.0.1-i486-1ahl.tgz
PACKAGE_EXTRA_FILE mpeg4ip-1.5.0.1-i486-1ahl.tgz
PACKAGE_EXTRA_MD5 2b50c235deb0236e59e5d7200acf0cea

# the xvidcore file
PACKAGE_EXTRA_URL http://repository.slacky.eu/slackware-12.1/multimedia/xvidcore/1.2.1/xvidcore-1.2.1-i486-1sl.tgz
PACKAGE_EXTRA_FILE xvidcore-1.2.1-i486-1sl.tgz
PACKAGE_EXTRA_MD5 3ea278d2ced5dd0afabd54a62bf0e043

# the yasm file
PACKAGE_EXTRA_URL http://repository.slacky.eu/slackware-12.1/development/yasm/0.7.2/yasm-0.7.2-i486-1sl.tgz
PACKAGE_EXTRA_FILE yasm-0.7.2-i486-1sl.tgz
PACKAGE_EXTRA_MD5 df5df2bf568bb05990c1f0daa7e804eb

# the jam file
PACKAGE_EXTRA_URL http://repository.slacky.eu/slackware-12.1/development/jam/2.5/jam-2.5-i486-2gal.tgz
PACKAGE_EXTRA_FILE jam-2.5-i486-2gal.tgz
PACKAGE_EXTRA_MD5 096ad8c4f82e40f35bb7e000749d7175

# the x264 file
PACKAGE_EXTRA_URL http://connie.slackware.com/~alien/slackbuilds/x264/pkg/13.1/x264-20110510-i486-1alien.tgz
PACKAGE_EXTRA_FILE x264-20110510-i486-1alien.tgz
PACKAGE_EXTRA_MD5 27dd5cca0cc8cb79522b8c8359210a06

# the libX11 file
PACKAGE_EXTRA_URL http://slackware.oregonstate.edu/slackware-12.2/slackware/x/libX11-1.1.5-i486-1.tgz
PACKAGE_EXTRA_FILE libX11-1.1.5-i486-1.tgz
PACKAGE_EXTRA_MD5 ffddc89e6711aa6a91ac0c4855af7789

# the libXcb file
PACKAGE_EXTRA_URL http://linuxpackages.cs.utah.edu//Slackware-11.0/X11/libxcb/libxcb-1.0-i486-1ced.tgz
PACKAGE_EXTRA_FILE libxcb-1.0-i486-1ced.tgz
PACKAGE_EXTRA_MD5 1a7be0f71dc1cd0939e986a580b56d76

# the libXau file
PACKAGE_EXTRA_URL http://slackware.oregonstate.edu/slackware-12.2/slackware/x/libXau-1.0.4-i486-1.tgz
PACKAGE_EXTRA_FILE libXau-1.0.4-i486-1.tgz
PACKAGE_EXTRA_MD5 8f978d7e6dd297e7f26dc0e123eaced4

# the pkg-config
PACKAGE_EXTRA_URL http://slackware.cs.utah.edu/pub/slackware/slackware-13.0/slackware/d/pkg-config-0.23-i486-2.txz
PACKAGE_EXTRA_FILE pkg-config-0.23-i486-2.txz
PACKAGE_EXTRA_MD5 c8e8e99639d5553b585779ee070b284e

# the Java run-time environment
#PACKAGE_EXTRA_URL http://slackware.cs.utah.edu/pub/slackware/slackware-12.2/slackware/l/jre-6u11-i586-1.tgz
#PACKAGE_EXTRA_FILE jre-6u11-i586-1.tgz
#PACKAGE_EXTRA_MD5 ec548608da146865a8a86dbdc209c587

# the ffmpeg for airvideo
PACKAGE_EXTRA_URL http://inmethod.com/air-video/download/ffmpeg-for-2.4.5-beta6.tar.bz2
PACKAGE_EXTRA_FILE ffmpeg-for-2.4.5-beta6.tar.bz2
PACKAGE_EXTRA_MD5 241844e9d41bbd9f8852955291490910

PACKAGE_INSTALLED /var/log/airvideo
PACKAGE_DEPENDENCIES This package relies on quite a few different package. Most are installed along with this one but
PACKAGE_DEPENDENCIES there are a few that need to be installed prior to this package.  The JAVA JRE package that is
PACKAGE_DEPENDENCIES included with unmenu should be installed first!!

PACKAGE_VARIABLE password||vPassword=12345||Enter the password used to connect to the Airvideo Server
PACKAGE_VARIABLE folders||vFolders=Movies:/mnt/user/Movies,Anime:/mnt/user/Anime||Enter the list of folders you would like to be visible.  Note the format of the line and make sure to replicate it exactly for your sources.  You will need something like <font color="red">Test</font>:<font color="green">/mnt/disk7/test</font> for the folders section. You need a "Name" for the folder (in this case the "Test" above in red), followed by a ":", and then the "Path" (in this case the "/mnt/disk7/test" above in green). To specify multiple folders use a comma (",") to separate the different listings.
PACKAGE_VARIABLE Temp Directory||vTMPDIR=/boot/packages/compile_temp_dir||This directory location will be used by the compiler for temporary files.  If you have over 1Gig of RAM you can probably use /var/tmp.  If you have less memory, use /boot/packages/compile_temp_dir

PACKAGE_INSTALLATION installpkg "${PACKAGE_DIRECTORY}"/x264-20110510-i486-1alien.tgz
PACKAGE_INSTALLATION installpkg "${PACKAGE_DIRECTORY}"/faac-1.26-i486-1gds.tgz
PACKAGE_INSTALLATION installpkg "${PACKAGE_DIRECTORY}"/faad2-2.6.1-i486-2gds.tgz
PACKAGE_INSTALLATION installpkg "${PACKAGE_DIRECTORY}"/xvidcore-1.2.1-i486-1sl.tgz
PACKAGE_INSTALLATION installpkg "${PACKAGE_DIRECTORY}"/jam-2.5-i486-2gal.tgz
PACKAGE_INSTALLATION installpkg "${PACKAGE_DIRECTORY}"/lame-3.98.2-i486-1gds.tgz
PACKAGE_INSTALLATION installpkg "${PACKAGE_DIRECTORY}"/mpeg4ip-1.5.0.1-i486-1ahl.tgz
PACKAGE_INSTALLATION installpkg "${PACKAGE_DIRECTORY}"/yasm-0.7.2-i486-1sl.tgz
PACKAGE_INSTALLATION installpkg "${PACKAGE_DIRECTORY}"/libX11-1.1.5-i486-1.tgz
PACKAGE_INSTALLATION installpkg "${PACKAGE_DIRECTORY}"/libxcb-1.0-i486-1ced.tgz
PACKAGE_INSTALLATION installpkg "${PACKAGE_DIRECTORY}"/libXau-1.0.4-i486-1.tgz
PACKAGE_INSTALLATION installpkg "${PACKAGE_DIRECTORY}"/pkg-config-0.23-i486-2.txz
PACKAGE_INSTALLATION installpkg "${PACKAGE_DIRECTORY}"/git-1.7.1-i486-1.txz

# if AirVideo is currently running we need to stop any instances of it before we do anything else
PACKAGE_INSTALLATION if [[ ! -z $(ps -ef | grep AirVideoServerLinux.jar | grep -v grep | awk '{print$2}') ]]; then
PACKAGE_INSTALLATION sleep 5
PACKAGE_INSTALLATION    if [ -f /etc/rc.d/unraid.d/rc.unraid_airvideo ]; then
PACKAGE_INSTALLATION       /etc/rc.d/unraid.d/rc.unraid_airvideo stop
PACAKGE_INSTALLATION    else
PACKAGE_INSTALLATION       for i in $(ps -ef | grep AirVideoServerLinux.jar | grep -v grep | awk '{print$2}')
PACKAGE_INSTALLATION       do
PACKAGE_INSTALLATION          if [[ $(ps -fp $i | awk 'NR>1' | awk '{print $10}') = "${PACKAGE_DIRECTORY}/AirVideoServerLinux.jar" ]]; then
PACKAGE_INSTALLATION             kill $i
PACKAGE_INSTALLATION             echo "<font color=\"red\"><b>Killed \"$i\"</b></font>"
PACKAGE_INSTALLATION           fi
PACKAGE_INSTALLATION          sleep 5
PACKAGE_INSTALLATION       done
PACKAGE_INSTALLATION    fi
PACKAGE_INSTALLATION fi
PACKAGE_INSTALLATION sleep 5

# check to see how much memory is in the machine
PACKAGE_INSTALLATION MEM="$(free -m | grep Mem: | awk '{print$2}')"
PACKAGE_INSTALLATION ulimit -v 250000
PACKAGE_INSTALLATION if [ "${MEM}" -lt 768 ]; then
PACKAGE_INSTALLATION	    echo "Warning: You may not have enough memory ( $MEM ) to compile ffmpeg, but we'll try and see how far we can get."
PACKAGE_INSTALLATION fi

# compile ffmpeg first.  that way we have as much RAM as possible for it to succeed.
PACKAGE_INSTALLATION INSTALLED_FFMPEG_VERSION=`${PACKAGE_DIRECTORY}/ffmpeg/ffmpeg -version 2>&1 | awk 'NF==2' | awk '{ field = $NF}; END{ print field }'`
PACKAGE_INSTALLATION LATEST_DOWNLOADED_VERSION=`ls -lrt ${PACKAGE_DIRECTORY} | grep ffmpeg-for- | awk 'END{print $NF}'`
PACKAGE_INSTALLATION CACHE_PRESSURE=`sysctl vm.vfs_cache_pressure| awk '{print $3}'`
PACKAGE_INSTALLATION if [[ ! -x "${PACKAGE_DIRECTORY}/ffmpeg/ffmpeg" || "${INSTALLED_FFMPEG_VERSION}" != "${LATEST_DOWNLOADED_VERSION}" ]]; then
PACKAGE_INSTALLATION 	 test ! -f /usr/bin/bzip2 && echo "An untar program was not detected.  Please install the Parallel bzip package."
PACKAGE_INSTALLATION 	 test ! -f /usr/bin/bzip2 && exit
PACKAGE_INSTALLATION     test ! -f /usr/bin/cc && echo "The C compiler has not been installed.  ffmpeg compile not possible"
PACKAGE_INSTALLATION     test ! -f /usr/bin/cc && exit
PACKAGE_INSTALLATION     rm -rf "${PACKAGE_DIRECTORY}"/ffmpeg/
PACKAGE_INSTALLATION     sync
PACKAGE_INSTALLATION     echo 3 > /proc/sys/vm/drop_caches
PACKAGE_INSTALLATION     sysctl -w vm.vfs_cache_pressure=200
PACKAGE_INSTALLATION     cd "${PACKAGE_DIRECTORY}";
PACKAGE_INSTALLATION	 if [ -f /usr/bin/bzip2 ]; then 
PACKAGE_INSTALLATION 		 tar --no-same-owner -xf "${LATEST_DOWNLOADED_VERSION}";
PACKAGE_INSTALLATION 	 else
PACKAGE_INSTALLATION 		 tar --use-compress-prog=pbzip2 --no-same-owner -xf "${LATEST_DOWNLOADED_VERSION}";
PACKAGE_INSTALLATION 	 fi
PACKAGE_INSTALLATION     mkdir -p "${vTMPDIR-/var/tmp}"
PACKAGE_INSTALLATION     TMPDIR="${vTMPDIR-/var/tmp}"; export TMPDIR
PACKAGE_INSTALLATION     echo TMPDIR set to $TMPDIR
PACKAGE_INSTALLATION     cd "${PACKAGE_DIRECTORY}/ffmpeg";

# rename the version.sh file that DOES NOT WORK
PACKAGE_INSTALLATION     mv "${PACKAGE_DIRECTORY}"/ffmpeg/version.sh "${PACKAGE_DIRECTORY}"/ffmpeg/version.sh.old

# create a version.sh file that works
PACKAGE_INSTALLATION     echo '#!/bin/sh' > "${PACKAGE_DIRECTORY}"/ffmpeg/version.sh
PACKAGE_INSTALLATION     echo "" >> "${PACKAGE_DIRECTORY}"/ffmpeg/version.sh
PACKAGE_INSTALLATION     echo "# no revision number found" >> "${PACKAGE_DIRECTORY}"/ffmpeg/version.sh
PACKAGE_INSTALLATION     echo "test \"\$revision\" || revision=UNKNOWN" >> "${PACKAGE_DIRECTORY}"/ffmpeg/version.sh
PACKAGE_INSTALLATION     echo "" >> "${PACKAGE_DIRECTORY}"/ffmpeg/version.sh
PACKAGE_INSTALLATION     echo "# releases extract the version number from the VERSION file" >> "${PACKAGE_DIRECTORY}"/ffmpeg/version.sh
PACKAGE_INSTALLATION     echo "test \"\$version\" || version=\$revision" >> "${PACKAGE_DIRECTORY}"/ffmpeg/version.sh
PACKAGE_INSTALLATION     echo "" >> "${PACKAGE_DIRECTORY}"/ffmpeg/version.sh
PACKAGE_INSTALLATION     echo "NEW_REVISION=\"#define FFMPEG_VERSION \\\"\$version\\\"\"" >> "${PACKAGE_DIRECTORY}"/ffmpeg/version.sh
PACKAGE_INSTALLATION     echo "OLD_REVISION=\$(cat version.h 2> /dev/null)" >> "${PACKAGE_DIRECTORY}"/ffmpeg/version.sh
PACKAGE_INSTALLATION     echo "" >> "${PACKAGE_DIRECTORY}"/ffmpeg/version.sh
PACKAGE_INSTALLATION     echo "# Update version.h only on revision changes to avoid spurious rebuilds" >> "${PACKAGE_DIRECTORY}"/ffmpeg/version.sh
PACKAGE_INSTALLATION     echo "if test \"\$NEW_REVISION\" != \"\$OLD_REVISION\"; then" >> "${PACKAGE_DIRECTORY}"/ffmpeg/version.sh
PACKAGE_INSTALLATION     echo "    echo \"\$NEW_REVISION\" > \"\$2\"" >> "${PACKAGE_DIRECTORY}"/ffmpeg/version.sh
PACKAGE_INSTALLATION     echo "fi" >> "${PACKAGE_DIRECTORY}"/ffmpeg/version.sh
PACKAGE_INSTALLATION     sed -i "s@UNKNOWN@${LATEST_DOWNLOADED_VERSION}@ " "${PACKAGE_DIRECTORY}"/ffmpeg/version.sh

#config and compile
PACKAGE_INSTALLATION     ./configure.orig.fixed --enable-gpl --enable-nonfree --enable-postproc --enable-pthreads \
PACKAGE_INSTALLATION                        --enable-libmp3lame --enable-libx264 \
PACKAGE_INSTALLATION                        --enable-libxvid --enable-x11grab --disable-shared --enable-static;
PACKAGE_INSTALLATION     make
PACKAGE_INSTALLATION fi
PACKAGE_INSTALLATION sysctl -w vm.vfs_cache_pressure=$CACHE_PRESSURE
PACKAGE_INSTALLATION test ! -f "${PACKAGE_DIRECTORY}/ffmpeg/ffmpeg" && echo "ffmpeg compile failed. install aborted"
PACKAGE_INSTALLATION test ! -f "${PACKAGE_DIRECTORY}/ffmpeg/ffmpeg" && exit

# If Java Run-Time is not already installed, install it.
PACKAGE_INSTALLATION if [[ ! -f /usr/lib/java/bin/java && ! -f "${PACKAGE_DIRECTORY}"/jre-6u11-i586-1.tgz ]]; then
PACKAGE_INSTALLATION    echo "Required dependency, jre-6u11-i586-1.tgz, has not been installed. Please install it before installing Air Video."
PACKAGE_INSTALLATION    echo "You can install the package <a href=\"${MyHost}:${MyPort}/pkg_manager?select-jre-6u11-i586-1.tgz=Select+jre-6u11-i586-1.tgz\">Here</a>" 
PACKAGE_INSTALLATION    exit
PACKAGE_INSTALLATION else
PACKAGE_INSTALLATION     installpkg "${PACKAGE_DIRECTORY}"/jre-6u11-i586-1.tgz
PACKAGE_INSTALLATION fi

#install /etc/rc.d/unraid.d/rc.unraid_airvideo to allow clean start and stop of service
PACKAGE_INSTALLATION [ ! -d /etc/rc.d/unraid.d ] && mkdir /etc/rc.d/unraid.d
PACKAGE_INSTALLATION echo 'case $1 in' >/etc/rc.d/unraid.d/rc.unraid_airvideo
PACKAGE_INSTALLATION echo "start)" >>/etc/rc.d/unraid.d/rc.unraid_airvideo
PACKAGE_INSTALLATION echo "if [[ ! -z \$(ps -ef | grep AirVideoServerLinux.jar | grep -v grep | awk '{print\$2}') ]]; then" >> /etc/rc.d/unraid.d/rc.unraid_airvideo
PACKAGE_INSTALLATION echo "sleep 5" >> /etc/rc.d/unraid.d/rc.unraid_airvideo
PACKAGE_INSTALLATION echo "   for i in \$(ps -ef | grep AirVideoServerLinux.jar | grep -v grep | awk '{print\$2}')" >> /etc/rc.d/unraid.d/rc.unraid_airvideo
PACKAGE_INSTALLATION echo "   do" >> /etc/rc.d/unraid.d/rc.unraid_airvideo
PACKAGE_INSTALLATION echo "      if [[ \$(ps -fp \$i | awk 'NR>1' | awk '{print \$10}') = \"\${PACKAGE_DIRECTORY}/AirVideoServerLinux.jar\" ]]; then" >> /etc/rc.d/unraid.d/rc.unraid_airvideo
PACKAGE_INSTALLATION echo "         kill \$i" >> /etc/rc.d/unraid.d/rc.unraid_airvideo
PACKAGE_INSTALLATION echo "      fi" >> /etc/rc.d/unraid.d/rc.unraid_airvideo
PACKAGE_INSTALLATION echo "      sleep 5" >> /etc/rc.d/unraid.d/rc.unraid_airvideo
PACKAGE_INSTALLATION echo "   done" >> /etc/rc.d/unraid.d/rc.unraid_airvideo
PACKAGE_INSTALLATION echo "fi" >> /etc/rc.d/unraid.d/rc.unraid_airvideo
PACKAGE_INSTALLATION echo "cd ${PACKAGE_DIRECTORY}" >>/etc/rc.d/unraid.d/rc.unraid_airvideo
PACKAGE_INSTALLATION echo "air-video-server.sh test.properties &" | at now >>/etc/rc.d/unraid.d/rc.unraid_airvideo
PACKAGE_INSTALLATION echo ";;" >>/etc/rc.d/unraid.d/rc.unraid_airvideo
PACKAGE_INSTALLATION echo "stop)" >>/etc/rc.d/unraid.d/rc.unraid_airvideo
PACKAGE_INSTALLATION echo "if [[ ! -z \$(ps -ef | grep AirVideoServerLinux.jar | grep -v grep | awk '{print\$2}') ]]; then" >> /etc/rc.d/unraid.d/rc.unraid_airvideo
PACKAGE_INSTALLATION echo "sleep 5" >> /etc/rc.d/unraid.d/rc.unraid_airvideo
PACKAGE_INSTALLATION echo "   for i in \$(ps -ef | grep AirVideoServerLinux.jar | grep -v grep | awk '{print\$2}')" >> /etc/rc.d/unraid.d/rc.unraid_airvideo
PACKAGE_INSTALLATION echo "   do" >> /etc/rc.d/unraid.d/rc.unraid_airvideo
PACKAGE_INSTALLATION echo "      if [[ \$(ps -fp \$i | awk 'NR>1' | awk '{print \$10}') = \"\${PACKAGE_DIRECTORY}/AirVideoServerLinux.jar\" ]]; then" >> /etc/rc.d/unraid.d/rc.unraid_airvideo
PACKAGE_INSTALLATION echo "         kill \$i" >> /etc/rc.d/unraid.d/rc.unraid_airvideo
PACKAGE_INSTALLATION echo "      fi" >> /etc/rc.d/unraid.d/rc.unraid_airvideo
PACKAGE_INSTALLATION echo "      sleep 5" >> /etc/rc.d/unraid.d/rc.unraid_airvideo
PACKAGE_INSTALLATION echo "   done" >> /etc/rc.d/unraid.d/rc.unraid_airvideo
PACKAGE_INSTALLATION echo "fi" >> /etc/rc.d/unraid.d/rc.unraid_airvideo
PACKAGE_INSTALLATION echo ";;" >> /etc/rc.d/unraid.d/rc.unraid_airvideo
PACKAGE_INSTALLATION echo "esac" >> /etc/rc.d/unraid.d/rc.unraid_airvideo
PACKAGE_INSTALLATION chmod +x /etc/rc.d/unraid.d/rc.unraid_airvideo

#create the button to start airvideo
PACKAGE_INSTALLATION echo "#UNMENU_RELEASE \$Revision: 75 \$ \$Date: 2010-04-25 22:20:22 -0400 (Sun, 25 Apr 2010) \$" > "${SCRIPT_DIRECTORY}/41-unmenu_user_script_start_airvideo"
PACKAGE_INSTALLATION echo "#define USER_SCRIPT_LABEL Start AirVideo" >> "${SCRIPT_DIRECTORY}/41-unmenu_user_script_start_airvideo"
PACKAGE_INSTALLATION echo "#define USER_SCRIPT_DESCR This will start the AirVideo service so you can stream and live convert files" >> "${SCRIPT_DIRECTORY}/41-unmenu_user_script_start_airvideo"
PACKAGE_INSTALLATION echo "#define USER_SCRIPT_TEST test -e /boot/packages/AirVideoServerLinux.jar && echo \"Start AirVideo\"" >> "${SCRIPT_DIRECTORY}/41-unmenu_user_script_start_airvideo"
PACKAGE_INSTALLATION echo "echo \"<pre>\"" >> "${SCRIPT_DIRECTORY}/41-unmenu_user_script_start_airvideo"
PACKAGE_INSTALLATION echo "set -xv" >> "${SCRIPT_DIRECTORY}/41-unmenu_user_script_start_airvideo"
PACKAGE_INSTALLATION echo "cd ${PACKAGE_DIRECTORY}" >> "${SCRIPT_DIRECTORY}/41-unmenu_user_script_start_airvideo"
PACKAGE_INSTALLATION echo "echo \"air-video-server.sh test.properties &\" | at now + 1 minute" >> "${SCRIPT_DIRECTORY}/41-unmenu_user_script_start_airvideo"
PACKAGE_INSTALLATION echo   >> "${SCRIPT_DIRECTORY}/41-unmenu_user_script_start_airvideo"

#create the button to stop airvideo
PACKAGE_INSTALLATION echo "#UNMENU_RELEASE \$Revision: 75 \$ \$Date: 2010-04-25 22:20:22 -0400 (Sun, 25 Apr 2010) \$" > "${SCRIPT_DIRECTORY}/41-unmenu_user_script_stop_airvideo"
PACKAGE_INSTALLATION echo "#define USER_SCRIPT_LABEL Stop AirVideo" >> "${SCRIPT_DIRECTORY}/41-unmenu_user_script_stop_airvideo"
PACKAGE_INSTALLATION echo "#define USER_SCRIPT_DESCR This will stop the AirVideo service from running so that the array can be stopped cleanly" >> "${SCRIPT_DIRECTORY}/41-unmenu_user_script_stop_airvideo"
PACKAGE_INSTALLATION echo "#define USER_SCRIPT_TEST test -x /boot/packages/AirVideoServerLinux.jar && echo \"Stop AirVideo\"" >> "${SCRIPT_DIRECTORY}/41-unmenu_user_script_stop_airvideo"
PACKAGE_INSTALLATION echo "echo \"<pre>\"" >> "${SCRIPT_DIRECTORY}/41-unmenu_user_script_stop_airvideo"
PACKAGE_INSTALLATION echo "set -xv" >> "${SCRIPT_DIRECTORY}/41-unmenu_user_script_stop_airvideo"
PACKAGE_INSTALLATION echo "if [[ ! -z \$(ps -ef | grep AirVideoServerLinux.jar | grep -v grep | awk '{print\$2}') ]]; then" >> "${SCRIPT_DIRECTORY}/41-unmenu_user_script_stop_airvideo"
PACKAGE_INSTALLATION echo "sleep 5" >> "${SCRIPT_DIRECTORY}/41-unmenu_user_script_stop_airvideo"
PACKAGE_INSTALLATION echo "   for i in \$(ps -ef | grep AirVideoServerLinux.jar | grep -v grep | awk '{print\$2}')" >> "${SCRIPT_DIRECTORY}/41-unmenu_user_script_stop_airvideo"
PACKAGE_INSTALLATION echo "   do" >> "${SCRIPT_DIRECTORY}/41-unmenu_user_script_stop_airvideo"
PACKAGE_INSTALLATION echo "      if [[ \$(ps -fp \$i | awk 'NR>1' | awk '{print \$10}') = \"\${PACKAGE_DIRECTORY}/AirVideoServerLinux.jar\" ]]; then" >> "${SCRIPT_DIRECTORY}/41-unmenu_user_script_stop_airvideo"
PACKAGE_INSTALLATION echo "         kill \$i" >> "${SCRIPT_DIRECTORY}/41-unmenu_user_script_stop_airvideo"
PACKAGE_INSTALLATION echo "         echo \"<font color=\"red\"><b>Killed \"\$i\"</b></font>\"" >> "${SCRIPT_DIRECTORY}/41-unmenu_user_script_stop_airvideo"
PACKAGE_INSTALLATION echo "      fi" >> "${SCRIPT_DIRECTORY}/41-unmenu_user_script_stop_airvideo"
PACKAGE_INSTALLATION echo "      sleep 5" >> "${SCRIPT_DIRECTORY}/41-unmenu_user_script_stop_airvideo"
PACKAGE_INSTALLATION echo "   done" >> "${SCRIPT_DIRECTORY}/41-unmenu_user_script_stop_airvideo"
PACKAGE_INSTALLATION echo "fi" >> "${SCRIPT_DIRECTORY}/41-unmenu_user_script_stop_airvideo"
PACKAGE_INSTALLATION echo  >> "${SCRIPT_DIRECTORY}/41-unmenu_user_script_stop_airvideo"

#create test.properties file
PACKAGE_INSTALLATION rm -f "${PACKAGE_DIRECTORY}"/test.properties
PACKAGE_INSTALLATION touch "${PACKAGE_DIRECTORY}"/test.properties
PACKAGE_INSTALLATION echo "path.ffmpeg = ${PACKAGE_DIRECTORY}/ffmpeg/ffmpeg" >> "${PACKAGE_DIRECTORY}"/test.properties
PACKAGE_INSTALLATION echo "path.mp4creator = /usr/bin/mp4creator" >> "${PACKAGE_DIRECTORY}"/test.properties
PACKAGE_INSTALLATION echo "path.faac = /usr/bin/faac" >> "${PACKAGE_DIRECTORY}"/test.properties
PACKAGE_INSTALLATION echo "password = passwordPlaceHolder" >> "${PACKAGE_DIRECTORY}"/test.properties
PACKAGE_INSTALLATION echo "subtitles.encoding = windows-1250" >> "${PACKAGE_DIRECTORY}"/test.properties
PACKAGE_INSTALLATION echo "subtitles.font = Verdana" >> "${PACKAGE_DIRECTORY}"/test.properties
PACKAGE_INSTALLATION echo "folders = folderPlaceHolder" >> "${PACKAGE_DIRECTORY}"/test.properties
PACKAGE_INSTALLATION sed -i s@passwordPlaceHolder@"${vPassword}"@ "${PACKAGE_DIRECTORY}"/test.properties
PACKAGE_INSTALLATION sed -i s@folderPlaceHolder@"${vFolders}"@ "${PACKAGE_DIRECTORY}"/test.properties
PACKAGE_INSTALLATION rm -f "${PACKAGE_DIRECTORY}"/air-video-server.sh
PACKAGE_INSTALLATION touch "${PACKAGE_DIRECTORY}"/air-video-server.sh
PACKAGE_INSTALLATION echo "#!/bin/bash" >> "${PACKAGE_DIRECTORY}"/air-video-server.sh
PACKAGE_INSTALLATION echo "" >> "${PACKAGE_DIRECTORY}"/air-video-server.sh
PACKAGE_INSTALLATION echo "PROPFILE='/etc/conf.d/air-video-server'" >> "${PACKAGE_DIRECTORY}"/air-video-server.sh
PACKAGE_INSTALLATION echo "LOCALPROP=\`echo ~/.air-video-server/air-video-server.properties\`" >> "${PACKAGE_DIRECTORY}"/air-video-server.sh
PACKAGE_INSTALLATION echo "if [ -a \"\$1\" ]; then" >> "${PACKAGE_DIRECTORY}"/air-video-server.sh
PACKAGE_INSTALLATION echo "  PROPFILE=\"\$1\"" >> "${PACKAGE_DIRECTORY}"/air-video-server.sh
PACKAGE_INSTALLATION echo "else" >> "${PACKAGE_DIRECTORY}"/air-video-server.sh
PACKAGE_INSTALLATION echo "  [ -a \"\$LOCALPROP\" ] && PROPFILE=\"\$LOCALPROP\"" >> "${PACKAGE_DIRECTORY}"/air-video-server.sh
PACKAGE_INSTALLATION echo "fi" >> "${PACKAGE_DIRECTORY}"/air-video-server.sh
PACKAGE_INSTALLATION echo "exec /usr/lib/jre1.6.0_11/bin/java -jar "${PACKAGE_DIRECTORY}"/AirVideoServerLinux.jar \"\$PROPFILE\"" >> "${PACKAGE_DIRECTORY}"/air-video-server.sh
PACKAGE_INSTALLATION chmod +x "${PACKAGE_DIRECTORY}"/air-video-server.sh

PACKAGE_INSTALLATION echo "Version: 2.4.5-beta6" > /var/log/airvideo
PACKAGE_INSTALLATION cd "${PACKAGE_DIRECTORY}"
PACKAGE_INSTALLATION echo "<font size=\"5\" color=\"blue\"><b>NOTE: By deisgn the Airvideo process that is kicked off<br/> at the end of this install will not start for 1 minute.<br/>  Please be patient and wait before you try and connect to<br/> the Airvideo Server process from an iDevice.</b></font>"
PACKAGE_INSTALLATION sleep 5
PACKAGE_INSTALLATION echo "bash air-video-server.sh test.properties" | at now + 1 minute
PACKAGE_VERSION_TEST grep "Version:" /var/log/airvideo | awk '{print $2}'
PACKAGE_VERSION_STRING 2.4.5-beta6
PACKAGE_MEMORY_USAGE Heavy
PACKAGE_OS 32bit
